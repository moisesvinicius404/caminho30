// ----------------------
// C√ìDIGO DO DI√ÅRIO
// ----------------------
const form = document.getElementById("diarioForm");
const mensagem = document.getElementById("mensagem");

if (form && mensagem) {   // s√≥ roda se estiver na p√°gina do di√°rio
  form.addEventListener("submit", (e) => {
    e.preventDefault();

    const textareaVitoria = document.getElementById('vitoria');
    const textareaDesabafo = document.getElementById('desabafo');
    const textareaMudanca = document.getElementById('mudanca');

    if (textareaVitoria.value.trim() === '' || textareaDesabafo.value.trim() === '' || textareaMudanca.value.trim() === '') {
      mensagem.innerText = 'Ei, eu sei que voc√™ consegue preencher todos os campos üòÅ';
      mensagem.style.display = 'block';
    } else {
      mensagem.innerText = '‚úÖ Parab√©ns por ser corajoso(a) e colocar suas vit√≥rias e derrotas';
      mensagem.style.display = 'block';

      setTimeout(() => {
        mensagem.style.display = 'none';
        textareaVitoria.value = '';
        textareaDesabafo.value = '';
        textareaMudanca.value = '';
      }, 4500);

      alert('Lembrando: esse site n√£o grava nenhum dado seu, ent√£o pode ficar tranquilo(a). Coloquei esse di√°rio apenas para voc√™ colocar pra fora o que sente üôÇ');
    }
  });
}



// ----------------------
// C√ìDIGO DAS MISS√ïES ESPIRITUAIS
// ----------------------
const container = document.getElementById("missionsContainer");

if (container) {   // s√≥ roda se estiver na p√°gina das miss√µes espirituais
  const missions = [
    "Medite por 10 minutos",
    "Leia um Salmo",
    "Caminhe ao ar livre",
    "Escreva 3 coisas pelas quais √© grato",
    "Ore por algu√©m que voc√™ ama",
    "Fa√ßa 15 minutos de sil√™ncio total",
    "Leia um prov√©rbio e reflita",
    "Ou√ßa uma m√∫sica espiritual",
    "Anote seus sonhos",
    "Visualize seus objetivos",
    "Ajude algu√©m hoje",
    "Passe 24h sem reclamar",
    "Leia uma par√°bola de Jesus",
    "Fa√ßa uma ora√ß√£o da manh√£",
    "Contemple o c√©u por 5 minutos",
    "Fa√ßa jejum de redes sociais",
    "Cuide de uma planta ou animal",
    "Escreva suas b√™n√ß√£os do dia",
    "Ore antes de dormir",
    "Reflex√£o sobre seus valores",
    "Pratique respira√ß√£o profunda",
    "Leia Jo√£o cap√≠tulo 1",
    "Escreva uma carta de gratid√£o",
    "Doe algo que n√£o usa mais",
    "Fa√ßa uma boa a√ß√£o em segredo",
    "Agrade√ßa conscientemente por 3 coisas",
    "Releia suas anota√ß√µes antigas",
    "Ou√ßa um serm√£o ou palestra espiritual",
    "Passe tempo em contato com a natureza",
    "Escreva uma carta para si mesmo"
  ];

  let completed = JSON.parse(localStorage.getItem("completedMissions")) || [];

  missions.forEach((mission, index) => {
    const day = index + 1;
    const isDone = completed.includes(day);

    const col = document.createElement("div");
    col.className = "col-md-4";

    col.innerHTML = `
      <div class="card mission-card">
        <div class="card-body">
          <div class="mission-day">Dia ${day}</div>
          <h5 class="card-title">${mission}</h5>
          <button class="btn ${isDone ? 'btn-success done' : 'btn-outline-primary'} mark-btn" data-day="${day}">
            ${isDone ? "‚úî Feito" : "Marcar como Feito"}
          </button>
        </div>
      </div>
    `;

    container.appendChild(col);
  });

  document.querySelectorAll(".mark-btn").forEach(btn => {
    btn.addEventListener("click", () => {
      const day = parseInt(btn.getAttribute("data-day"));

      if (!completed.includes(day)) {
        completed.push(day);
        localStorage.setItem("completedMissions", JSON.stringify(completed));
        btn.classList.remove("btn-outline-primary");
        btn.classList.add("btn-success", "done");
        btn.textContent = "‚úî Feito";

        // üö® Se todas foram conclu√≠das
        if (completed.length === missions.length) {
          alert("üéâ Parab√©ns! Voc√™ concluiu todos os 30 dias da miss√£o espiritual!");
        }
      }
    });
  });
}



// ----------------------
// MISS√ïES MENTAIS
// ----------------------
(function(){
  const container = document.getElementById("missionsMentalContainer");
  if(!container) return; // s√≥ roda nesta p√°gina

  const missionsMental = [
    {t:"Respira√ß√£o Box 4x4x4x4", d:"5 minutos: inspire 4s, segure 4s, expire 4s, segure 4s. Treina sistema nervoso e foco.", tags:["Regula√ß√£o","Aten√ß√£o"]},
    {t:"Dieta de Dopamina (2h)", d:"2 horas sem redes/est√≠mulos r√°pidos.", tags:["Dopamina","Disciplina"]},
    {t:"Di√°rio Estoico ‚Äî dicotomia de controle", d:"Liste 3 coisas que voc√™ controla e 3 que n√£o.", tags:["Estoicismo","Clareza"]},
    {t:"Deep Work 25‚Äô", d:"Sess√£o Pomodoro sem interrup√ß√µes.", tags:["Foco","Meta"]},
    {t:"Reavalia√ß√£o Cognitiva", d:"Reescreva um pensamento autom√°tico negativo.", tags:["CBT","Emo√ß√µes"]},
    {t:"Regra dos 2 minutos", d:"Se levar < 2min, fa√ßa agora.", tags:["H√°bito","A√ß√£o"]},
    {t:"Leitura ‚Äî Medita√ß√µes (Marco Aur√©lio)", d:"10‚Äì15 min. Anote 1 princ√≠pio.", tags:["Estoicismo","Leitura"]},
    {t:"Exposi√ß√£o ao Desconforto (leve)", d:"Escolha 1 tarefa que evita e fa√ßa.", tags:["Antifragilidade","Coragem"]},
    {t:"Sil√™ncio Deliberado 10‚Äô", d:"Sem m√∫sica, sem tela.", tags:["Mindfulness","Aten√ß√£o"]},
    {t:"Visualiza√ß√£o de Processo", d:"Veja mentalmente os passos.", tags:["Neuroci√™ncia","Execu√ß√£o"]},
    {t:"Regra 30-30", d:"Trabalhe 30 min no seu projeto-chave.", tags:["Rotina","Prioridade"]},
    {t:"Ancoragem de H√°bito", d:"Cole um novo h√°bito ap√≥s um fixo.", tags:["H√°bitos","Design"]},
    {t:"Di√°logo Interno de Treinador", d:"Fale consigo como coach, n√£o cr√≠tico.", tags:["Autocompaix√£o","Desempenho"]},
    {t:"Leitura ‚Äî Cartas de S√™neca", d:"10‚Äì15 min. Extraia 1 regra pr√°tica.", tags:["Estoicismo","Leitura"]},
    {t:"Regra dos 5 porqu√™s", d:"Pergunte 5x 'por qu√™?'", tags:["An√°lise","Raiz"]},
    {t:"Desligar Notifica√ß√µes 24h", d:"Controle o contexto.", tags:["Ambiente","Foco"]},
    {t:"Mapa de Valores", d:"Liste seus 5 valores + 1 a√ß√£o hoje.", tags:["Valores","A√ß√£o"]},
    {t:"Julgamento Lento", d:"Antes de reagir, d√™ 10s.", tags:["Autocontrole","Frequ√™ncia"]},
    {t:"Regra da √önica Coisa", d:"Qual √© a √∫nica coisa que faz diferen√ßa?", tags:["Prioridade","Clareza"]},
    {t:"Leitura ‚Äî Epicteto (Enchir√≠dion)", d:"Substitua expectativa por preparo.", tags:["Estoicismo","Leitura"]},
    {t:"Jornal de Gratid√£o (3 itens)", d:"Treine o c√©rebro a notar o bem.", tags:["Neuroplasticidade","Gratid√£o"]},
    {t:"Rotina Matinal Simples", d:"√Ågua, respira√ß√£o, 1 tarefa chave.", tags:["Rotina","Disciplina"]},
    {t:"Regra 1% Melhor", d:"1 micro melhoria hoje.", tags:["Kaizen","Const√¢ncia"]},
    {t:"Limpeza Mental", d:"Escreva tudo 10 min.", tags:["Clareza","Organiza√ß√£o"]},
    {t:"Treino de Aten√ß√£o Externa", d:"Observe ambiente 10 min.", tags:["Aten√ß√£o","Presen√ßa"]},
    {t:"Compromisso P√∫blico", d:"Diga a algu√©m sua meta.", tags:["Compromisso","Accountability"]},
    {t:"Regra N√£o Negoci√°vel", d:"1 a√ß√£o di√°ria inegoci√°vel.", tags:["Identidade","Padr√µes"]},
    {t:"Negativa Visualiza√ß√£o", d:"Imagine perder algo valioso.", tags:["Estoicismo","Aprecia√ß√£o"]},
    {t:"Bloco Sem Multitarefa", d:"1 hora em 1 coisa s√≥.", tags:["Foco","Monotarefa"]},
    {t:"Fechamento do Dia", d:"Revis√£o: acertos e melhorias.", tags:["Reflex√£o","Loop"]}
  ];

  const storageKey = "completedMissionsMental";
  let completed = JSON.parse(localStorage.getItem(storageKey)) || [];

  const progressText = document.getElementById("progressTextMental");
  const progressBar  = document.getElementById("progressBarMental");
  const pctMental    = document.getElementById("pctMental");

  function updateProgress(){
    const total = missionsMental.length;
    const done = completed.length;
    const pct = Math.round((done/total)*100);
    if(progressText) progressText.textContent = `${done} / ${total}`;
    if(progressBar){
      progressBar.style.width = `${pct}%`;
      progressBar.setAttribute("aria-valuenow", String(pct));
    }
    if(pctMental) pctMental.textContent = `${pct}%`;
  }

  function render(){
    container.innerHTML = "";
    missionsMental.forEach((m, i)=>{
      const day = i+1;
      const isDone = completed.includes(day);

      const col = document.createElement("div");
      col.className = "col-12 col-md-6 col-lg-4 fade-up";

      col.innerHTML = `
        <div class="mission-card h-100">
          <div class="d-flex align-items-center justify-content-between">
            <span class="mission-day">Dia ${day}</span>
            <div>
              ${m.tags.slice(0,2).map(tag=>`<span class="badge-psy">${tag}</span>`).join("")}
            </div>
          </div>
          <h5 class="mission-title">${m.t}</h5>
          <p class="mission-desc">${m.d}</p>
          <div class="d-flex gap-2">
            <button class="btn ${isDone ? "btn-mark done" : "btn-outline-primary btn-mark"}" data-day="${day}">
              ${isDone ? "‚úî Feito" : "Marcar como Feito"}
            </button>
            <button class="btn btn-outline-secondary btn-sm" data-tip="${day}">Dica</button>
          </div>
        </div>
      `;
      container.appendChild(col);
    });

    // evento marcar feito
    container.querySelectorAll(".btn-mark").forEach(btn=>{
      btn.addEventListener("click", ()=>{
        const day = parseInt(btn.getAttribute("data-day"));
        if(!completed.includes(day)){
          completed.push(day);
          localStorage.setItem(storageKey, JSON.stringify(completed));
          btn.classList.remove("btn-outline-primary");
          btn.classList.add("done");
          btn.textContent = "‚úî Feito";
          updateProgress();

          if(progressBar){
            progressBar.classList.add("pulse");
            setTimeout(()=>progressBar.classList.remove("pulse"), 900);
          }

          // üö® Se todas foram conclu√≠das
          if (completed.length === missionsMental.length) {
            alert("üéâ Parab√©ns! Voc√™ concluiu todos os 30 dias da miss√£o mental!");
          }
        }
      });
      
    });

    // evento dicas
    container.querySelectorAll("[data-tip]").forEach(tipBtn=>{
      tipBtn.addEventListener("click", ()=>{
        const n = tipBtn.getAttribute("data-tip");
        const tips = [
          "Respire pelo nariz. Ritmo cria estado.",
          "Ambiente √© metade da batalha.",
          "Escreva √† m√£o: c√©rebro foca melhor.",
          "Tempo curto + tarefa clara = a√ß√£o r√°pida.",
          "Nomeie a emo√ß√£o ‚Üí voc√™ a regula.",
          "Pequeno come√ßo derruba a in√©rcia.",
          "Leia devagar, mastigue ideias.",
          "Desconforto leve hoje = for√ßa amanh√£.",
          "Observe sem julgar, s√≥ notar.",
          "Processo > Resultado.",
          "Primeiro bloco do dia decide o tom.",
          "Cole h√°bitos.",
          "Fale consigo como treinador.",
          "1 ideia aplicada vale por 100 lidas.",
          "Procure a causa, n√£o o sintoma.",
          "Quem controla notifica√ß√£o controla a mente.",
          "Valores guiam quando a motiva√ß√£o falha.",
          "Pausa cria escolha.",
          "Proteja sua √∫nica coisa.",
          "Prepare-se para o que pode dar errado.",
          "Gratid√£o treina o c√©rebro.",
          "Manh√£ simples = dia forte.",
          "1% hoje, 1% amanh√£.",
          "Tire da cabe√ßa, ponha no papel.",
          "Olhe ao redor: esteja no mundo.",
          "Conte seus planos a algu√©m.",
          "Defina padr√µes inegoci√°veis.",
          "Valorize o agora.",
          "Uma coisa de cada vez.",
          "Feche o dia: aprenda e siga."
        ];
        alert(`Dica r√°pida ‚Äî Dia ${n}:\n\n${tips[Number(n)-1] || "Mantenha simples. Fa√ßa o essencial."}`);
      });
    });

    updateProgress();
  }

  render();
})();
